.\" Copyright (C) 2005 The Regents of the University of California.
.\" Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
.\" Written by Jim Garlick <garlick@llnl.gov>.
.\"
.\" This file is part of ISP, a toolkit for constructing pipeline applications.
.\" For details, see <http://isp.sourceforge.net>.
.\"
.\" ISP is free software; you can redistribute it and/or modify it under
.\" the terms of the GNU General Public License as published by the Free
.\" Software Foundation; either version 2 of the License, or (at your option)
.\" any later version.
.\"
.\" ISP is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
.\" details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with ISP; if not, write to the Free Software Foundation, Inc.,
.\" 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
.TH ISP_UNIT_MAP 3  2005-03-23 "" "Industrial Strength Pipes"
.SH NAME
isp_unit_map \- execute a function over a unit stream
.SH SYNOPSIS
.nf
.B #include <isp/isp.h>
.sp
.BI "typedef int (*isp_mapfun_t)(isp_unit_t " u ", void *" arg ");"
.sp
.BI "int isp_unit_map(isp_handle_t " h ", isp_mapfun_t " mapfun ", void *" arg ");"
.fi
.SH DESCRIPTION
\fBisp_unit_map()\fR reads each unit from handle \fIh\fR, calls
\fImapfun\fR which performs some user-defined operation on the unit, 
and then writes the unit back to the handle.  \fIarg\fR is an opaque parameter
that is passed directly to \fImapfun\fR on each call.  The return value of 
\fImapfun\fR is the result code of the operation: ISP_ESUCCESS (0) for 
success, or nonzero for failure.
.PP
.SH "RETURN VALUE"
ISP_ESUCCESS (0) is returned on success.  
A nonzero error code which can be decoded with 
\fBisp_errstr()\fR is returned on failure.
\fBisp_unit_map()\fR does not return ISP_EEOF on end of file.
.SH "SEE ALSO"
.BR isp_init (3),
.BR isp_unit_create (3),
.BR isp_unit_init (3),
.BR isp_unit_write (3),
.BR isp_errstr (3)
